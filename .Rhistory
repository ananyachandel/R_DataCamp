spP = SpatialPolygons(list(ps1, ps2, ps3), 1:3)
m <- leaflet() %>%
addPolygons(data = spP)
m
library(sp)
p1 = Polygon(cbind(c(2, 4, 4, 1, 2), c(2, 3, 5, 4, 2)))
p2 = Polygon(cbind(c(5, 4, 2, 5), c(2, 3, 2, 2)))
p3 = Polygon(cbind(c(4, 4, 5, 10, 4), c(5, 3, 2, 5, 5)))
p4 = Polygon(cbind(c(5, 6, 6, 5, 5), c(4, 4, 3, 3, 4)), hole = TRUE)
ps1 = Polygons(list(p1), "s1")
ps2 = Polygons(list(p2), "s2")
ps3 = Polygons(list(p4, p3), "s3/4")
spP = SpatialPolygons(list(ps1, ps2, ps3), 1:3)
m <- leaflet() %>%
addTiles() %>%
addPolygons(data = spP)
m
installed.packages()
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.6), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = TRUE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("state", fill = FALSE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("india", fill = TRUE, plot = FALSE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("france", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("england", fill = TRUE, plot = FALSE)
library(maps)
mapStates = map("canada.cities", fill = TRUE, plot = FALSE)
library(maps)
mapStates = map("canada", fill = TRUE, plot = FALSE)
library(maps)
mapStates = map("world","China", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("world","China", fill = FALSE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("world","India", fill = FALSE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("world","India", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map.cities(country =  "India", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map.states(country =  "India", fill = TRUE, plot = FALSE)
library(maps)
mapStates = mapStates(country =  "India", fill = TRUE, plot = FALSE)
library(maps)
mapStates = map("world","India", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("world","India", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = FALSE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.8), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.7), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(15, alpha = 0.7), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(5, alpha = 0.7), stroke = TRUE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = 0.7), stroke = TRUE)
m = leaflet() %>% addTiles()
df = data.frame(
lat = rnorm(100),
lng = rnorm(100),
size = runif(100, 5, 20),
color = sample(colors(), 100)
)
m = leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = ~size, color = ~color, fill = FALSE) %>%
addCircleMarkers(radius = runif(100, 4, 10), color = c('red'))
m
m = leaflet() %>% addTiles()
df = data.frame(
lat = rnorm(100),
lng = rnorm(100),
size = runif(100, 5, 20),
color = sample(colors(), 100)
)
m = leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = ~size, color = ~color, fill = FALSE) %>%
addCircleMarkers(radius = runif(100, 4, 10), color = c('red'))
m
m = leaflet() %>% addTiles()
df = data.frame(
lat = rnorm(100),
lng = rnorm(100),
size = runif(100, 5, 20),
color = sample(colors(), 100)
)
m = leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = ~size, color = ~color, fill = FALSE)
m
library(leaflet)
m <- leaflet() %>%
addTiles() %>%     # By default, it add openStreetMap map tiles
addMarkers(lng =  77.026634,lat = 28.459497, popup = "My first map with R")
m
m <- leaflet() %>%
setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>%
addTiles()
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 12) %>%
addTiles()
m
names(providers)
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 12) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 18) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 20) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 26) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 4) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$HERE.satelliteDay)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$HERE.normalDay)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$MapBox)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Stamen.TerrainBackground)
m
leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi",
layers = "nexrad-n0r-900913",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data © 2012 IEM Nexrad"
)
leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi",
layers = "nexrad-n0r-900913",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data © 2012 IEM Nexrad"
)
leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi",
layers = "nexrad-n0r-900913",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data © 2012 IEM Nexrad"
)
m <- leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi",
layers = "nexrad-n0r-900913",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data © 2012 IEM Nexrad"
)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLite)
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLite)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLite, options = providerTileOptions(opacity = 0.35))
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines, options = providerTileOptions(opacity = 0.35))
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines)
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines) %>%
addProviderTiles(providers$Stamen.TonerLabels)
m
m <- leaflet(maxZoom = 17) %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines) %>%
addProviderTiles(providers$Stamen.TonerLabels)
m <- leaflet(options = leafletOptions(maxZoom = 17)) %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines) %>%
addProviderTiles(providers$Stamen.TonerLabels)
m
m <- leaflet(options = leafletOptions(maxZoom = 18)) %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines) %>%
addProviderTiles(providers$Stamen.TonerLabels)
m
m <- leaflet(options = leafletOptions(maxZoom = 17)) %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines) %>%
addProviderTiles(providers$Stamen.TonerLabels)
m
unlink('_12_DataVisualizationGisLeaflet/_12_3_Basemaps_DataVisualizationGisLeaflet_cache', recursive = TRUE)
install.packages("pandocfilters")
unlink('_12_DataVisualizationGisLeaflet/_12_3_Basemaps_DataVisualizationGisLeaflet_cache', recursive = TRUE)
library(leaflet)
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 12) %>%
addTiles()
m
m <- leaflet() %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery)
m
m <- leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 4) %>%
addWMSTiles(
"http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi",
layers = "nexrad-n0r-900913",
options = WMSTileOptions(format = "image/png", transparent = TRUE),
attribution = "Weather data © 2012 IEM Nexrad"
)
m
m <- leaflet(options = leafletOptions(maxZoom = 17)) %>%
setView(lng = 77.026634,lat = 28.459497, zoom = 6) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addProviderTiles(providers$Stamen.TonerLines) %>%
addProviderTiles(providers$Stamen.TonerLabels)
m
data(quakes)
data(quakes)
help("data")
data("quakes")
force(quakes)
data(quakes)
# Show first 20 rows from the `quakes` dataset
m <- leaflet(data = quakes[21:40,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
m
data(quakes)
# Show first 20 rows from the `quakes` dataset
m <- leaflet(data = quakes[40:60,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
m
data(quakes)
# Show first 20 rows from the `quakes` dataset
m <- leaflet(data = quakes[100:120,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
m
data(quakes)
# Show first 20 rows from the `quakes` dataset
m <- leaflet(data = quakes[140:160,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
m
m <- leaflet(data = quakes[140:160,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
library(leaflet)
m <- leaflet(data = quakes[140:160,]) %>%
addTiles() %>%
addMarkers(~long, ~lat, popup = ~as.character(mag), label = ~as.character(mag))
m
data <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'fa',
markerColor = getColor(df.20)
)
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'fa',
markerColor = getColor(df.20)
)
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df.20)
)
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df.20)
)
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df)
)
m <- leaflet(df) %>%
addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
m
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'fa',
markerColor = getColor(df)
)
m <- leaflet(df) %>%
addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
m
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'glyphicon',
markerColor = getColor(df)
)
m <- leaflet(df) %>%
addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
m
df <- quakes[140:160,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df)
)
m <- leaflet(df) %>%
addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
m
